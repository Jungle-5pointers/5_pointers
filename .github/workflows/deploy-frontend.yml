name: Deploy Frontend to AWS S3 and CloudFront

on:
  pull_request:
    types: [closed]
    branches: [main]
    paths:
      - 'my-web-builder/**'
  workflow_dispatch:

jobs:
  deploy:
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Clean install frontend dependencies
        run: |
          cd my-web-builder/apps/frontend
          rm -rf node_modules package-lock.json
          npm install --force

      - name: Create production environment file
        run: |
          cd my-web-builder/apps/frontend
          rm -f .env.production
          echo "VITE_API_URL=https://ddukddak.org/api" > .env.production
          echo "VITE_YJS_WEBSOCKET_URL=wss://43.203.235.108:1235" >> .env.production
 
          echo "VITE_SUBDOMAIN_URL=http://3.35.141.231:3001" >> .env.production
          echo "VITE_GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env.production
          echo "VITE_KAKAO_CLIENT_ID=${{ secrets.KAKAO_JAVASCRIPT_KEY }}" >> .env.production
          echo "VITE_KAKAO_JS_KEY=${{ secrets.KAKAO_JS_KEY }}" >> .env.production
          echo "VITE_FRONTEND_URL=https://ddukddak.org" >> .env.production
          echo "Created .env.production:"
          cat .env.production

      - name: Build application for production
        run: |
          cd my-web-builder/apps/frontend
          npm run build:production

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ap-northeast-2

      - name: Deploy to S3
        run: |
          cd my-web-builder/apps/frontend
          aws s3 sync dist/ s3://jungle-frontend-5 --delete

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
