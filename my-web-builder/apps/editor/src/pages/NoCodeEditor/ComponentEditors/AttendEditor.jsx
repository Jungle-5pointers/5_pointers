import React from 'react';
import { TextEditor, NumberEditor, ColorEditor } from '../PropertyEditors';

function AttendEditor({ selectedComp, onUpdate }) {
  const updateProperty = (propKey, value) => {
    const updatedComp = {
      ...selectedComp,
      props: {
        ...selectedComp.props,
        [propKey]: value
      }
    };
    onUpdate(updatedComp);
  };

  return (
    <div>
      <div style={{
        display: 'flex',
        alignItems: 'center',
        gap: 8,
        marginBottom: 20,
        padding: '8px 12px',
        backgroundColor: '#f0f2f5',
        borderRadius: 6
      }}>
        <span style={{ fontSize: 16 }}>üë•</span>
        <div>
          <div style={{ fontSize: 13, fontWeight: 600, color: '#1d2129' }}>
            Ï∞∏ÏÑù Ïó¨Î∂Ä
          </div>
          <div style={{ fontSize: 11, color: '#65676b' }}>
            {selectedComp.id}
          </div>
        </div>
      </div>

      <TextEditor
        value={selectedComp.props.title}
        onChange={(value) => updateProperty('title', value)}
        label="Ï†úÎ™©"
        placeholder="Ï∞∏ÏÑù Ïó¨Î∂Ä Ï†úÎ™©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
      />

      <TextEditor
        value={selectedComp.props.description}
        onChange={(value) => updateProperty('description', value)}
        label="ÏÑ§Î™Ö"
        placeholder="Ï∞∏ÏÑùÏûêÏóêÍ≤å Î≥¥Ïó¨Ï§Ñ ÏÑ§Î™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî"
      />

      <TextEditor
        value={selectedComp.props.buttonText}
        onChange={(value) => updateProperty('buttonText', value)}
        label="Î≤ÑÌäº ÌÖçÏä§Ìä∏"
        placeholder="Ï∞∏ÏÑù Î≤ÑÌäºÏóê ÌëúÏãúÎê† ÌÖçÏä§Ìä∏"
      />

      <NumberEditor
        value={selectedComp.props.maxAttendees}
        onChange={(value) => updateProperty('maxAttendees', value)}
        label="ÏµúÎåÄ Ï∞∏ÏÑùÏûê Ïàò"
        min={1}
        max={1000}
        suffix="Î™Ö"
      />

      <div style={{ height: 1, backgroundColor: '#eee', margin: '16px 0' }} />
      <div style={{ 
        fontSize: 12, 
        color: '#65676b', 
        fontWeight: 600, 
        marginBottom: 12,
        textTransform: 'uppercase',
        letterSpacing: '0.5px'
      }}>
        Colors
      </div>

      <ColorEditor
        value={selectedComp.props.backgroundColor}
        onChange={(value) => updateProperty('backgroundColor', value)}
        label="Î∞∞Í≤ΩÏÉâ"
      />

      <ColorEditor
        value={selectedComp.props.buttonColor}
        onChange={(value) => updateProperty('buttonColor', value)}
        label="Î≤ÑÌäº ÏÉâÏÉÅ"
      />
    </div>
  );
}

export default AttendEditor; 